<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="6" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="9173" started-at="2018-08-18T14:42:12Z" finished-at="2018-08-18T14:42:22Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="9173" started-at="2018-08-18T14:42:12Z" finished-at="2018-08-18T14:42:22Z">
      <class name="HelloFresh.RestApi$CountriesSearchTests">
        <test-method status="PASS" signature="verifyResponseUsingTheCodeDE()[pri:0, instance:HelloFresh.RestApi$CountriesSearchTests@77caeb3e]" name="verifyResponseUsingTheCodeDE" duration-ms="3610" started-at="2018-08-18T14:42:13Z" finished-at="2018-08-18T14:42:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyResponseUsingTheCodeDE -->
        <test-method status="PASS" signature="verifyResponseUsingTheCodeGB()[pri:0, instance:HelloFresh.RestApi$CountriesSearchTests@77caeb3e]" name="verifyResponseUsingTheCodeGB" duration-ms="802" started-at="2018-08-18T14:42:16Z" finished-at="2018-08-18T14:42:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyResponseUsingTheCodeGB -->
        <test-method status="PASS" signature="verifyResponseUsingTheCodeUS()[pri:0, instance:HelloFresh.RestApi$CountriesSearchTests@77caeb3e]" name="verifyResponseUsingTheCodeUS" duration-ms="1244" started-at="2018-08-18T14:42:17Z" finished-at="2018-08-18T14:42:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyResponseUsingTheCodeUS -->
      </class> <!-- HelloFresh.RestApi$CountriesSearchTests -->
      <class name="HelloFresh.RestApi">
        <test-method status="PASS" signature="VerifyISOCodesInResponse()[pri:0, instance:HelloFresh.RestApi@47c62251]" name="VerifyISOCodesInResponse" duration-ms="1340" started-at="2018-08-18T14:42:18Z" finished-at="2018-08-18T14:42:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyISOCodesInResponse -->
        <test-method status="PASS" signature="verifyResponseUsingNonExistantCode()[pri:0, instance:HelloFresh.RestApi@47c62251]" name="verifyResponseUsingNonExistantCode" duration-ms="789" started-at="2018-08-18T14:42:20Z" finished-at="2018-08-18T14:42:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyResponseUsingNonExistantCode -->
        <test-method status="FAIL" signature="verifyResponseUsingPOST()[pri:0, instance:HelloFresh.RestApi@47c62251]" name="verifyResponseUsingPOST" duration-ms="1338" started-at="2018-08-18T14:42:20Z" finished-at="2018-08-18T14:42:22Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path RestResponse.messages doesn't match.
Expected: iterable containing ["Country found matching code [XY]."]
  Actual: [No matching country found for requested code [XY].]
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path RestResponse.messages doesn't match.
Expected: iterable containing ["Country found matching code [XY]."]
  Actual: [No matching country found for requested code [XY].]

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:483)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:655)
at sun.reflect.GeneratedMethodAccessor34.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:275)
at io.restassured.specification.ResponseSpecification$content$1.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:258)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:274)
at HelloFresh.RestApi.verifyResponseUsingPOST(RestApi.java:111)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyResponseUsingPOST -->
      </class> <!-- HelloFresh.RestApi -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
